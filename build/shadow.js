function disablePageHideEvent(){window.addEventListener("pagehide",pagehideHandler,!0),overrideDocumentProperty("visibilityState","visible"),overrideDocumentProperty("hidden",!1),document.addEventListener("visibilitychange",visibilitychangeHandler,!0)}function resetPageHideEvent(){window.removeEventListener("pagehide",pagehideHandler,!0),restoreDocumentProperty("visibilityState"),restoreDocumentProperty("hidden"),document.removeEventListener("visibilitychange",visibilitychangeHandler,!0)}function pagehideHandler(e){e.stopImmediatePropagation()}function visibilitychangeHandler(e){e.stopImmediatePropagation()}function overrideDocumentProperty(e,n){Object.defineProperty(document,e,{get:()=>n,configurable:!0})}function restoreDocumentProperty(e){delete document[e]}let cleanupFunction=null;function keepPageAlive(){const e=[];disablePageHideEvent(),e.push(resetPageHideEvent);let n=null;(async()=>{try{n=await navigator.wakeLock.request("screen")}catch(e){}})(),e.push((()=>n?.release()));let t;const i=()=>{window.dispatchEvent(new Event("mousemove")),window.dispatchEvent(new Event("keypress")),t=requestAnimationFrame(i)};i(),e.push((()=>cancelAnimationFrame(t)));const a=setInterval((()=>{fetch(window.location.href,{method:"HEAD",mode:"no-cors"}).catch((()=>{}))}),3e4);return e.push((()=>clearInterval(a))),cleanupFunction=()=>e.forEach((e=>e())),cleanupFunction}function cancelKeepPageAlive(){cleanupFunction&&(cleanupFunction(),cleanupFunction=null)}window.addEventListener("message",(function(e){if(e.origin===window.location.origin)switch(e.data.action){case"disable_page_hide_event":disablePageHideEvent();break;case"reset_page_hide_event":resetPageHideEvent();break;case"page_keep_alive":keepPageAlive();break;case"page_keep_alive_cancel":cancelKeepPageAlive()}}));